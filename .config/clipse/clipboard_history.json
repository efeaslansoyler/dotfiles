{"clipboardHistory":[{"value":"\n","recorded":"2025-05-01 22:48:01.491850469","filePath":"null","pinned":false},{"value":".config/clipse/clipboard_history.json\n","recorded":"2025-05-01 22:47:59.186176174","filePath":"null","pinned":false},{"value":".config/clipse/clipboard_history.json","recorded":"2025-05-01 22:47:48.187380994","filePath":"null","pinned":false},{"value":"origin git@github.com:efeaslansoyler/dotfiles.git","recorded":"2025-05-01 22:46:41.735883925","filePath":"null","pinned":false},{"value":"efeaslansoyler/arch-setup","recorded":"2025-05-01 22:44:05.907865872","filePath":"null","pinned":false},{"value":"efeaslansoyler/dotfiles","recorded":"2025-05-01 22:43:38.533213594","filePath":"null","pinned":false},{"value":"inor \"Stowing dotfiles...\"\nstow .","recorded":"2025-05-01 22:41:01.553519686","filePath":"null","pinned":false},{"value":"#!/usr/bin/env bash\nset -euo pipefail\n\n# Load utilities and package categories\nsource ./utils.sh\nsource ./packages.conf\n\nPACMAN_CONF=\"/etc/pacman.conf\"\nMKINITCPIO_CONF=\"/etc/mkinitcpio.conf\"\nZSHRC=\"$HOME/.zshrc\"\n\ninfo \"Configuring pacman.conf...\"\n\n# Backup pacman.conf\nsudo cp \"$PACMAN_CONF\" \"$PACMAN_CONF.bak\"\n\n# Uncomment 'Color' in pacman.conf\nsudo sed -i 's/^#Color/Color/' \"$PACMAN_CONF\"\n\n# Add ILoveCandy under Color if not already present\nif ! grep -q \"^ILoveCandy\" \"$PACMAN_CONF\"; then\n  sudo sed -i '/^Color$/a ILoveCandy' \"$PACMAN_CONF\"\nfi\n\n# Enable multilib repository\nsudo sed -i '/#\\[multilib\\]/,/#Include = \\/etc\\/pacman.d\\/mirrorlist/{\n  s/#\\[multilib\\]/[multilib]/;\n  s/#Include = \\/etc\\/pacman.d\\/mirrorlist/Include = \\/etc\\/pacman.d\\/mirrorlist/;\n}' \"$PACMAN_CONF\"\n\n# Refresh pacman database to recognize new repositories\ninfo \"Refreshing pacman database...\"\nsudo pacman -Syy\n\ninfo \"pacman.conf configured successfully.\"\n\n# Ensure reflector is installed\nif ! command -v reflector \u0026\u003e/dev/null; then\n  info \"Installing reflector for mirrorlist optimization...\"\n  sudo pacman -S --needed --noconfirm reflector\nelse\n  info \"reflector is already installed.\"\nfi\n\n# Optimize mirrorlist\ninfo \"Optimizing pacman mirrorlist with reflector...\"\nif ! sudo reflector \\\n  --country Turkey,Germany,Bulgaria,Greece \\\n  --age 12 \\\n  --protocol https \\\n  --sort rate \\\n  --save /etc/pacman.d/mirrorlist; then\n  error \"Reflector failed to update mirrorlist. Continuing with existing mirrorlist.\"\nfi\n\ninfo \"Mirrorlist updated.\"\n\n# Refresh pacman database to use new mirrors\ninfo \"Refreshing pacman database with new mirrors...\"\nsudo pacman -Syy\n\n# Ensure yay is installed\nif ! command -v yay \u0026\u003e/dev/null; then\n  info \"yay not found, installing yay...\"\n  sudo pacman -S --needed --noconfirm base-devel git\n  git clone https://aur.archlinux.org/yay.git /tmp/yay\n  cd /tmp/yay\n  makepkg -si --noconfirm\n  cd -\n  rm -rf /tmp/yay\nelse\n  info \"yay is already installed.\"\nfi\n\n# Install NVIDIA drivers\ninfo \"Installing NVIDIA drivers...\"\ninstall_category nvidia_pkgs\n\n# Backup mkinitcpio.conf\nsudo cp \"$MKINITCPIO_CONF\" \"$MKINITCPIO_CONF.bak\"\n\n# Configure mkinitcpio.conf\ninfo \"Configuring mkinitcpio.conf for NVIDIA...\"\n\n# 1. Set MODULES (replace the line with the correct modules)\nsudo sed -i 's/^MODULES=.*/MODULES=(nvidia nvidia_modeset nvidia_uvm nvidia_drm)/' \"$MKINITCPIO_CONF\"\n\n# 2. Remove 'kms' from HOOKS\nsudo sed -i 's/\\\u003ckms\\\u003e//g' \"$MKINITCPIO_CONF\"\n\ninfo \"mkinitcpio.conf configured.\"\n\n# Regenerate initramfs\ninfo \"Regenerating initramfs...\"\nsudo mkinitcpio -P\n\n# Install remaining package categories\ncategories=(\n  wm_pkgs\n  font_pkgs\n  app_pkgs\n  audio_pkgs\n  util_pkgs\n)\n\ninfo \"Installing remaining packages...\"\n# Gather all package arrays except nvidia_pkgs\nfor category in \"${categories[@]}\"; do\n  install_category \"$category\"\ndone\n\ninfo \"All packages installed!\"\n\n# Install Colloid GTK Theme\nCOLLOID_GTK_DIR=\"/tmp/Colloid-gtk-theme\"\nif [ ! -d \"$COLLOID_GTK_DIR\" ]; then\n  info \"Cloning Colloid GTK theme...\"\n  git clone --depth=1 https://github.com/vinceliuice/Colloid-gtk-theme.git \"$COLLOID_GTK_DIR\"\nelse\n  info \"Colloid GTK theme repo already cloned.\"\nfi\n\ninfo \"Installing Colloid GTK theme with your options...\"\nbash \"$COLLOID_GTK_DIR/install.sh\" -t pink -c dark -l --tweaks black\n\n# Install Colloid Icon Theme\nCOLLOID_ICON_DIR=\"/tmp/Colloid-icon-theme\"\nif [ ! -d \"$COLLOID_ICON_DIR\" ]; then\n  info \"Cloning Colloid icon theme...\"\n  git clone --depth=1 https://github.com/vinceliuice/Colloid-icon-theme.git \"$COLLOID_ICON_DIR\"\nelse\n  info \"Colloid icon theme repo already cloned.\"\nfi\n\ninfo \"Installing Colloid icon theme with your options...\"\nbash \"$COLLOID_ICON_DIR/install.sh\" -t pink\n\n# Clean up\nrm -rf \"$COLLOID_GTK_DIR\" \"$COLLOID_ICON_DIR\"\n\n# Configure Zshrc\ntouch \"$ZSHRC\"\nHYPRLAND_BLOCK=\"# Start Hyprland with uwsm\nif uwsm check may-start; then\n  exec uwsm start hyprland-uwsm.desktop\nfi\n\"\n# Add Hyprland autostart block to .zshrc if not already present\nif ! grep -q \"exec uwsm start hyprland-uwsm.desktop\" \"$ZSHRC\" 2\u003e/dev/null; then\n  info \"Adding Hyprland autostart block to .zshrc\"\n  echo -e \"\\n$HYPRLAND_BLOCK\" \u003e\u003e\"$ZSHRC\"\nelse\n  info \"Hyprland autostart block already present in .zshrc\"\nfi\n\n# Enable and start services\ninfo \"Enabling fstrim.timer (SSD TRIM support)...\"\nsudo systemctl enable --now fstrim.timer\n\ninfo \"Enabling SSH daemon...\"\nsudo systemctl enable --now sshd\n\n# Install and enable UFW firewall\ninfo \"Installing and enabling UFW firewall...\"\nsudo pacman -S --needed --noconfirm ufw\nsudo systemctl enable --now ufw\nsudo ufw default deny incoming\nsudo ufw default allow outgoing\nsudo ufw enable\n\ninfo \"Setup complete! Please reboot your system to apply all changes.\"","recorded":"2025-05-01 22:40:03.914852608","filePath":"null","pinned":false}]}